[gcode_macro clean_nozzle]

# If you want the purging routine in your bucket enabled, set to True (and vice versa).
variable_enable_purge:              1

# These parameters define your filament purging. The retract variable is used to retract right after purging to prevent unnecessary
# oozing. Some filament are particularly oozy and may continue to ooze out of the nozzle for a second or two after retracting. The
# ooze dwell variable makes allowance for this. Update as necessary. If you decided to not enable purge, you can ignore this section.
variable_purge_len:            15	         ; Amount of filament, in mm, to purge.
variable_purge_spd:           150	         ; Speed, in mm/min, of the purge.
variable_purge_temp_min:      200	         ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.
variable_purge_ret:             10            ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
variable_ooze_dwell:            2            ; Dwell/wait time, in seconds, after purging and retracting.

# Adjust this so that your nozzle scrubs within the brush. Currently defaulted to be a lot higher for safety. Be careful not to go too low!
variable_brush_top:            3.15

# These parameters define your scrubbing, travel speeds, safe z clearance and how many times you want to wipe. Update as necessary. Wipe 
# direction is randomized based off whether the left or right bucket is randomly selected in the purge & scrubbing routine.
variable_clearance_z:           5	         ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and brush.
variable_wipe_qty:              4	         ; Number of complete (A complete wipe: left, right, left OR right, left, right) wipes.
variable_prep_spd_xy:        18000	         ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_prep_spd_z:         6000	         ; Travel (not cleaning) speed along z axis in mm/min.
variable_wipe_spd_xy:        5000	         ; Nozzle wipe speed in mm/min.


# These parameters define the size of the brush. Update as necessary. A visual reference is provided below. Note that orientation of 
# parameters remain the same whether bucket is at rear or front.
# 
#                  ←   brush_width   →                            
#                   _________________                                                          ↑
#                  |                 |  ↑                     If you chose location_bucket_rear = True, Y position is acquired
#  brush_start (x) |                 | brush_depth            from your stepper_y position_max. Adjust your brush physically in
#                  |_________________|  ↓                               Y so that the nozzle scrubs within the brush.       
#                          (y)                                                                 ↓
#                      brush_front
# __________________________________________________________
#                     PRINTER FRONT
# 
# 


# Left-side of brush, and width of the brush bristles. Wipes will go from (brush_start - 10) to (brush_start + brush_width + 10)
variable_brush_start:     80
variable_brush_width:     40	

# Width of the left bucket. If the bucket extends past X-min, then this should be set to @variable_brush_start
variable_bucket_left_width:    69

gcode:
    # Set up variables
    {% set enable_purge = params.PURGE|default(1)|int %}
    {% set purge_temp_min = params.TEMP_MIN|default(200)|float %}
    {% set wipe_qty = params.WIPES|default(3)|int %}

    # First, check if the axes are homed.
    {% if "xyz" in printer.toolhead.homed_axes %}

        ## Save the gcode state in this macro instance.
        SAVE_GCODE_STATE NAME=clean_nozzle

        ## Set to absolute positioning.
        G90

        ## Grab max position of Y-axis from config
        {% set Ry = printer.configfile.config["stepper_y"]["position_max"]|float %}

        ## Raise Z for travel.
        G1 Z{brush_top + clearance_z} F{prep_spd_z}

        ## Check if user enabled purge option or not.
        {% if enable_purge > 0 and printer.extruder.temperature >= purge_temp_min %}
            ### Move to purge location
            G1 X{brush_start - (bucket_left_width / 2)} Y{Ry} F{prep_spd_xy}

            ### Perform purge if the temp is up to min temp. If not, it will skip and continue executing rest of macro. Small retract after
            ### purging to minimize any persistent oozing at 5x purge_spd. G4 dwell is in milliseconds, hence * 1000 in formula.
            M83      ; relative mode
            G1 E{purge_len} F{purge_spd}
            G1 E-{purge_ret} F{purge_spd * 5}
            G4 P{ooze_dwell * 1000}
            G92 E0   ; reset extruder
        {% endif %}
    
        ## Position for wipe
        G1 X{brush_start - 10} Y{Ry} F{prep_spd_xy}

        ## Move nozzle down into brush.
        G1 Z{brush_top} F{prep_spd_z}
    
        ## Perform wipe
        {% for wipes in range(0, wipe_qty + 1) %}
            G1 X{brush_start - 10} F{wipe_spd_xy}
            G1 X{brush_start + brush_width + 10} F{wipe_spd_xy}
        {% endfor %}

        ## End with a rightwards wipe
        G1 X{brush_start + brush_width + 10} F{wipe_spd_xy}
    
        ## Clear from area.
        M117 Cleaned!
        G1 Z{brush_top + clearance_z} F{prep_spd_z}

        ## Restore the gcode state to how it was before the macro.
        RESTORE_GCODE_STATE NAME=clean_nozzle

    {% else %}

        ## raise error will stop any macros that clean_nozzle is referenced in from proceeding for safety.
        { action_raise_error("Please home your axes!") }
        M117 Please home first!

    {% endif %}
